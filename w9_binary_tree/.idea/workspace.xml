<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakePresetLoader"><![CDATA[{
  "useNewFormat": true
}]]></component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated />
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="bbd52775-045f-4b28-90d9-35268c413f16" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../labyrinth/bestPath.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../labyrinth/bestPath.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-20bb6b43e42e37233f61.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-8e49cdea191f26eb7111.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.cmake/api/v1/reply/index-2023-06-27T17-33-21-0947.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.cmake/api/v1/reply/target-labyrinth-Debug-4d6c2849688f79c11911.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/labyrinth.dir/library.c.obj" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/labyrinth.dir/library.c.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/labyrinth.dir/main.c.obj" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/labyrinth.dir/main.c.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/labyrinth.dir/terrain_maze.c.obj" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/CMakeFiles/labyrinth.dir/terrain_maze.c.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/labyrinth.exe" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/cmake-build-debug/labyrinth.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/library.c" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/library.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/library.h" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/library.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/main.c" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/main.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/terrain_maze.c" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/terrain_maze.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../labyrinth/terrain_maze.h" beforeDir="false" afterPath="$PROJECT_DIR$/../labyrinth/terrain_maze.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../w7_sortieren1/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-79765a90833fdf4171ec.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/cmake-build-debug/.cmake/api/v1/reply/index-2023-06-26T09-18-59-0834.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/cmake-build-debug/.cmake/api/v1/reply/target-w7_sortieren1-Debug-c718de093d9317d7d255.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/../w7_sortieren1/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/../w7_sortieren1/cmake-build-debug/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/main.c" beforeDir="false" afterPath="$PROJECT_DIR$/../w7_sortieren1/main.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/sort_lib.c" beforeDir="false" afterPath="$PROJECT_DIR$/../w7_sortieren1/sort_lib.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../w7_sortieren1/sort_lib.h" beforeDir="false" afterPath="$PROJECT_DIR$/../w7_sortieren1/sort_lib.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2022" />
    <option name="minorVersion" value="3.3" />
  </component>
  <component name="ProjectId" id="2SRNf0jEgqQBI8wtb1y1mKwnd4O" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="bbd52775-045f-4b28-90d9-35268c413f16" name="Changes" comment="" />
      <created>1689105534011</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689105534011</updated>
      <workItem from="1689105536400" duration="53000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>